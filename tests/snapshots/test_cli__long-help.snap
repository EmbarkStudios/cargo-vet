---
source: tests/test-cli.rs
assertion_line: 63
expression: stdout
---
cargo-vet 0.1.0
Supply-chain security for Rust

USAGE:
    cargo-vet.exe [OPTIONS] [SUBCOMMAND]

OPTIONS:
        --all-features
            Activate all available features

        --exclude <SPEC>
            Exclude packages from being processed

        --features <FEATURES>
            Space-separated list of features to activate

    -h, --help
            Print help information

        --locked
            Do not pull in new "audits"

        --log-file <LOG_FILE>
            Instead of stderr, write logs to this file (only used after successful CLI parsing)

        --manifest-path <PATH>
            Path to Cargo.toml

        --no-default-features
            Do not activate the `default` feature

        --output-file <OUTPUT_FILE>
            Instead of stdout, write output to this file

    -p, --package <SPEC>
            Package to process (see `cargo help pkgid`)

    -V, --version
            Print version information

        --verbose <VERBOSE>
            How verbose logging should be (log level)
            
            [default: warn]
            [possible values: off, error, warn, info, debug, trace]

        --workspace
            Process all packages in the workspace

SUBCOMMANDS:
    accept-criteria-change
            Accept changes that a foreign audits.toml made to their criteria
    certify
            Mark `$package $version` as reviewed with `$message`
    diff
            Yield a diff against the last reviewed version
    fetch
            Fetch the source of `$package $version`
    fmt
            Reformat all of vet's files (in case you hand-edited them)
    forbid
            Mark `$package $version` as unacceptable with `$message`
    help
            Print this message or the help of the given subcommand(s)
    init
            initialize cargo-vet for your project
    suggest
            Suggest some low-hanging fruit to review

